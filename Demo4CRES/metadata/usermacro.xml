<?xml version="1.0" encoding="UTF-8"?>
<usermacro:UserMacro xmlns:usermacro="http://www.hundsun.com/ares/studio/usermacro/1.0.0" name="usermacro.xml">
  <macroItems name="判断记录存在" content="select count(*) &#xD;&#xA;into @rowcount &#xD;&#xA;from dual&#xD;&#xA;where exists(select * &#xD;&#xA;             from [表名]&#xD;&#xA;             where [条件]);" type="过程"/>
  <macroItems name="记录不存在" content="when NO_DATA_FOUND then&#xD;&#xA;  @error_no   := &lt;E>[错误ID];&#xD;&#xA;  @error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;  return (@error_no);" type="过程"/>
  <macroItems name="记录已存在" content="when DUP_VAL_ON_INDEX then&#xD;&#xA;  @error_no := &lt;E>[错误ID];&#xD;&#xA;  @error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;  return (@error_no);" type="过程"/>
  <macroItems name="报错返回" content="@error_no   := &lt;E>[错误ID];&#xD;&#xA;@error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;&#xD;&#xA;return(@error_no);" type="过程"/>
  <macroItems name="自定义报错返回" content="when others then&#xD;&#xA;  @error_no   := &lt;E>[错误ID];&#xD;&#xA;  @error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;  @error_id   := SQLCODE;&#xD;&#xA;  @error_sysinfo := substr(SQLERRM,1,500);&#xD;&#xA;  return (@error_no);" type="过程"/>
  <macroItems name="SQL报错返回" content="@error_no   := &lt;E>[错误ID];&#xD;&#xA;@error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;@error_id   := SQLCODE;&#xD;&#xA;@error_sysinfo := substr(SQLERRM,1,500);&#xD;&#xA;return(@error_no);" type="过程"/>
  <macroItems name="游标报错返回" content="@error_no   := &lt;E>[错误ID];&#xD;&#xA;@error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;@error_id   := SQLCODE;&#xD;&#xA;@error_sysinfo := substr(SQLERRM,1,500);&#xD;&#xA;open @cursor for select @error_no as error_no, @error_info as error_info,@error_id as error_id,@error_sysinfo as error_sysinfo from dual;&#xD;&#xA;&#xD;&#xA;return(@error_no);" type="过程"/>
  <macroItems name="记录不存在报错返回" content="if @rowcount = 0 then&#xD;&#xA;  @error_no   := &lt;E>[错误ID];&#xD;&#xA;  @error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;  return(@error_no);&#xD;&#xA;end if;" type="过程"/>
  <macroItems name="记录存在报错返回" content="if @rowcount > 0 then&#xD;&#xA;  @error_no := &lt;E>[错误ID];&#xD;&#xA;  @error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;  return(@error_no);&#xD;&#xA;end if;" type="过程"/>
  <macroItems name="更新记录不存在" content="if SQL%NOTFOUND then&#xD;&#xA;  @error_no   := &lt;E>[错误ID];&#xD;&#xA;  @error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;  rollback;&#xD;&#xA;  return(@error_no);&#xD;&#xA;end if;" type="过程"/>
  <macroItems name="事务内记录不存在" content="when NO_DATA_FOUND then&#xD;&#xA;  @error_no   := &lt;E>[错误ID];&#xD;&#xA;  @error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;  @error_id   := SQLCODE;&#xD;&#xA;  @error_sysinfo := substr(SQLERRM,1,500);&#xD;&#xA;  rollback;&#xD;&#xA;  return (@error_no);" type="过程"/>
  <macroItems name="事务内记录已存在" content="when DUP_VAL_ON_INDEX then&#xD;&#xA;  rollback;&#xD;&#xA;  @error_no   := &lt;E>[错误ID];&#xD;&#xA;  @error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;  @error_id   := SQLCODE;&#xD;&#xA;  @error_sysinfo := substr(SQLERRM,1,500);&#xD;&#xA;  return (@error_no);" type="过程"/>
  <macroItems name="事务内业务报错返回" content="@error_no   := &lt;E>[错误ID];&#xD;&#xA;@error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;rollback;&#xD;&#xA;return(@error_no);" type="过程"/>
  <macroItems name="事务内报错返回" content="@error_no   := &lt;E>[错误ID];&#xD;&#xA;@error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;@error_id   := SQLCODE;&#xD;&#xA;@error_sysinfo := substr(SQLERRM,1,500);&#xD;&#xA;rollback;&#xD;&#xA;return(@error_no);" type="过程"/>
  <macroItems name="事务内游标报错返回" content="@error_no   := &lt;E>[错误ID];&#xD;&#xA;@error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;@error_id   := SQLCODE;&#xD;&#xA;@error_sysinfo := substr(SQLERRM,1,500);&#xD;&#xA;rollback;&#xD;&#xA;open @cursor for select @error_no as error_no, @error_info as error_info,@error_id as error_id,@error_sysinfo as error_sysinfo from dual;&#xD;&#xA;&#xD;&#xA;return(@error_no);" type="过程"/>
  <macroItems name="事务内记录不存在报错返回" content="if @rowcount = 0 then&#xD;&#xA;  rollback;&#xD;&#xA;  @error_no   := &lt;E>[错误ID];&#xD;&#xA;  @error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;  return(@error_no);&#xD;&#xA;end if;" type="过程"/>
  <macroItems name="事务内记录存在报错返回" content="if @rowcount > 0 then&#xD;&#xA;  rollback;&#xD;&#xA;  @error_no := &lt;E>[错误ID];&#xD;&#xA;  @error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;  return(@error_no);&#xD;&#xA;end if;" type="过程"/>
  <macroItems name="事务内自定义异常返回" content="when others then&#xD;&#xA;  @error_no   := &lt;E>[错误ID];&#xD;&#xA;  @error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;  @error_id   := SQLCODE;&#xD;&#xA;  @error_sysinfo := substr(SQLERRM,1,500);&#xD;&#xA;  rollback;&#xD;&#xA;  return (@error_no);" type="过程"/>
  <macroItems name="事务回滚" content="rollback;" type="过程"/>
  <macroItems name="游标返回" content="begin&#xD;&#xA;  open @cursor for @sql_str;&#xD;&#xA;exception&#xD;&#xA;  when others then&#xD;&#xA;    @error_id   := SQLCODE;&#xD;&#xA;    @error_sysinfo := substr(SQLERRM,1,500);&#xD;&#xA;    open @cursor for select &lt;E>[错误ID] as error_no,&lt;SP>[错误信息] as error_info,@error_id as error_id,@error_sysinfo as error_sysinfo,@error_pathinfo as error_pathinfo from dual;&#xD;&#xA;    return &lt;E>[错误ID];&#xD;&#xA;end;&#xD;&#xA;return 0;" type="过程"/>
  <macroItems name="过程报错返回" content="open @cursor for select &lt;E>[错误ID] as error_no,&lt;SP>[错误信息] as error_info,@error_id as error_id,@error_sysinfo as error_sysinfo,@error_pathinfo as error_pathinfo from dual;&#xD;&#xA;return [错误ID];" type="过程"/>
  <macroItems name="如果结果集为空" content="if (lpResultSet->IsEmpty())" type="原子"/>
  <macroItems name="如果结果集不为空" content="if (!lpResultSet->IsEmpty())" type="原子"/>
  <macroItems name="中断跳转" content="goto svr_end;" type="原子"/>
  <macroItems name="结果集返回" content="PackResultSet(lpResultSet,lpOutPacker);" type="原子"/>
  <macroItems name="函数报错返回" content="iReturnCode = [错误ID];&#xD;&#xA;@error_no   = [错误ID];&#xD;&#xA;hs_snprintf(@error_info,CNST_ERRORINFO_LEN, &lt;SP>[错误信息]);&#xD;&#xA;&#xD;&#xA;goto svr_end;" type="原子,逻辑"/>
  <macroItems name="自定义函数报错返回" content="iReturnCode = [错误ID];&#xD;&#xA;@error_no   = [错误ID];&#xD;&#xA;hs_snprintf(@error_info,CNST_ERRORINFO_LEN, &lt;SP>[错误信息]);&#xD;&#xA;&#xD;&#xA;goto svr_end;" type="原子"/>
  <macroItems name="数据库报错返回" content="iReturnCode = ERR_EXEC_SQL_FAIL;&#xD;&#xA;@error_no = ERR_EXEC_SQL_FAIL;&#xD;&#xA;hs_strncpy(@error_info,&quot;执行SQL语句失败&quot;,CNST_ERRORINFO_LEN);&#xD;&#xA;@error_id = lpConn->getErrNo();&#xD;&#xA;hs_strncpy(@error_sysinfo,lpConn->getErrInfo(),CNST_ERRORINFO_LEN);&#xD;&#xA;goto svr_end;" type="原子"/>
  <macroItems name="标准可选查询条件字符串" content="if (isnull(trim([变量])) != 0)&#xD;&#xA;{&#xD;&#xA;   hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%s%s&quot;,    @sSql,&quot;    and [表别名][字段] [运算符]'&quot;, [变量],&quot;' &quot;);&#xD;&#xA;}" type="原子"/>
  <macroItems name="标准可选查询条件定位串字符串" content="if (isnull(trim([变量])) != 0)&#xD;&#xA;{&#xD;&#xA;   hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%s%s&quot;,    @sSql,&quot;    and [表别名][字段] [运算符]'&quot;, [变量],&quot;' &quot;);&#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xD;&#xA;   hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%s%s&quot;,    @sSql,&quot;    and [表别名][字段] [运算符]'&quot;, &quot;0&quot;,&quot;' &quot;);&#xD;&#xA;}" type="原子"/>
  <macroItems name="标准可选查询条件字符串instr" sequence="[变量][字段][运算符][表别名]" content="if (isnull(trim([变量])) != 0)&#xD;&#xA;{&#xD;&#xA;   hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%s%s&quot;,    @sSql,&quot;    and instr(',' || '&quot;,[变量],&quot;' || ',', ',' ||  to_char([表别名][字段]) || ',') [运算符] 0 &quot;);&#xD;&#xA;}" type="原子"/>
  <macroItems name="标准可选查询条件字符串instr无分隔符" sequence="[变量][字段][运算符][表别名]" content="if (isnull(trim([变量])) != 0)&#xD;&#xA;{&#xD;&#xA;   hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%s%s&quot;,    @sSql,&quot;    and instr( '&quot;,[变量],&quot;' , to_char([表别名][字段])) [运算符] 0 &quot;);&#xD;&#xA;}" type="原子"/>
  <macroItems name="标准可选查询条件字符" sequence="[变量][字段][运算符][表别名]" content="if ([变量] != CNST_CHAR_DEFAULTVALUE)&#xD;&#xA;{&#xD;&#xA;   hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%c%s&quot;,    @sSql,&quot;    and [表别名][字段] [运算符]'&quot;, [变量],&quot;' &quot;);&#xD;&#xA;}" type="原子"/>
  <macroItems name="标准可选查询条件整数" sequence="[变量][字段][运算符][表别名]" content="if ([变量] != 0)&#xD;&#xA;{&#xD;&#xA;   hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%d%s&quot;,    @sSql,&quot;    and [表别名][字段] [运算符]&quot;, [变量],&quot; &quot;);&#xD;&#xA;}" type="原子"/>
  <macroItems name="标准可选查询条件实数" sequence="[变量][字段][运算符][表别名]" content="if ([变量] != 0.00)&#xD;&#xA;{&#xD;&#xA;   hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%f%s&quot;,    @sSql,&quot;    and [表别名][字段] [运算符]&quot;, [变量],&quot; &quot;);&#xD;&#xA;}" type="原子"/>
  <macroItems name="标准可选查询条件字符串exact" sequence="[变量][字段][运算符][表别名]" content="hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%s%s&quot;,    @sSql,&quot;    and [表别名][字段] [运算符]'&quot;, [变量],&quot;' &quot;);" type="原子"/>
  <macroItems name="标准可选查询条件字符exact" sequence="[变量][字段][运算符][表别名]" content="hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%c%s&quot;,    @sSql,&quot;    and [表别名][字段] [运算符]'&quot;, [变量],&quot;' &quot;);" type="原子"/>
  <macroItems name="标准可选查询条件整数exact" sequence="[变量][字段][运算符][表别名]" content="if ([变量] != 0)&#xD;&#xA;{&#xD;&#xA;  hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%d%s&quot;,    @sSql,&quot;    and [表别名][字段] [运算符]&quot;, [变量],&quot; &quot;);&#xD;&#xA;}" type="原子"/>
  <macroItems name="标准可选查询条件实数exact" sequence="[变量][字段][运算符][表别名]" content="if (fabs([变量]) > 0.000001)&#xD;&#xA;{&#xD;&#xA;  hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%f%s&quot;,    @sSql,&quot;    and [表别名][字段] [运算符]&quot;, [变量],&quot; &quot;);&#xD;&#xA;}" type="原子"/>
  <macroItems name="上海交易类别判断" content="if ((hs_strcmp(@exchange_type,CNST_EXCHANGETYPE_SHA) == 0) || (hs_strcmp(@exchange_type,CNST_EXCHANGETYPE_SHB) == 0)|| (hs_strcmp(@exchange_type,CNST_EXCHANGETYPE_GDSY) == 0))&#xD;&#xA;" type="原子"/>
  <macroItems name="深圳交易类别判断" content="if ((hs_strcmp(@exchange_type,CNST_EXCHANGETYPE_SZA) == 0) || (hs_strcmp(@exchange_type,CNST_EXCHANGETYPE_SZB) == 0) || (hs_strcmp(@exchange_type,CNST_EXCHANGETYPE_TZA) == 0) || (hs_strcmp(@exchange_type,CNST_EXCHANGETYPE_TZB) == 0) || (hs_strcmp(@exchange_type,CNST_EXCHANGETYPE_JHJJ) == 0))" type="原子"/>
  <macroItems name="流水号银行储蓄业务判断" content="if (([变量] % 2) != 0)" type="原子"/>
  <macroItems name="流水号银行结算业务判断" content="if (([变量] % 2) == 0)" type="原子"/>
  <macroItems name="重发业务跳转" content="if (@check_resend == '1' &amp;&amp; @original_serial_no > 0)&#xD;&#xA;  goto resend_end;" type="原子"/>
  <macroItems name="重发业务判断" content="if (@check_resend == '1' &amp;&amp; @original_serial_no > 0)" type="原子"/>
  <macroItems name="取定位串" content="hs_snprintf(@position_str,CNST_POSSTR_LEN,&quot;%d%010d&quot;, @init_date,@serial_no);" type="原子"/>
  <macroItems name="香港交易类别判断" content="if ( hs_strcmp(@exchange_type,CNST_EXCHANGETYPE_HK) == 0 )" type="原子"/>
  <macroItems name="失败时返回" content="if ( OK_SUCCESS != iReturnCode )&#xD;&#xA;  goto svr_end;" type="原子"/>
  <macroItems name="失败时跳转" content="if ( OK_SUCCESS != iReturnCode )&#xD;&#xA;  goto svr_error;" type="原子"/>
  <macroItems name="警告返回" content="iReturnCode = ERR_SYSWARNING;&#xD;&#xA;goto svr_end;" type="原子"/>
  <macroItems name="正常返回" content="iReturnCode = OK_SUCCESS;&#xD;&#xA;goto svr_end;" type="原子"/>
  <macroItems name="复核业务标志" content="if (@audit_action == CNST_AUDIT_BUSI_CHK)&#xD;&#xA;   goto svr_end;" type="原子,逻辑"/>
  <macroItems name="标准可选查询条件字符存在instr" sequence="[变量][字段][表别名]" content="if (isnull(trim([变量])) != 0)&#xD;&#xA;{&#xD;&#xA;  if (length([变量]) == 1)&#xD;&#xA;  {&#xD;&#xA;     hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%s%s&quot;,    @sSql,&quot;    and [表别名][字段] = '&quot;,[变量],&quot;' &quot;);&#xD;&#xA;  }&#xD;&#xA;  else&#xD;&#xA;  {&#xD;&#xA;     hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%s%s&quot;,    @sSql,&quot;    and instr('&quot;,[变量],&quot;' , [表别名][字段]) > 0 &quot;);&#xD;&#xA;  }&#xD;&#xA;}" type="原子"/>
  <macroItems name="标准可选查询条件整数存在instr" sequence="[变量][字段][表别名]" content="if (isnull(trim([变量])) != 0)&#xD;&#xA;{&#xD;&#xA;  if (instr([变量], ',') > 0)&#xD;&#xA;  {&#xD;&#xA;     hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%s%s&quot;,    @sSql,&quot;    and instr(',' || '&quot;,[变量],&quot;' || ',', ',' ||  to_char([表别名][字段]) || ',') > 0 &quot;);&#xD;&#xA;  }&#xD;&#xA;  else&#xD;&#xA;  {&#xD;&#xA;     hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%s&quot;,    @sSql,&quot;    and [表别名][字段] = &quot;,[变量]);&#xD;&#xA;  }&#xD;&#xA;}" type="原子"/>
  <macroItems name="标准可选查询条件字符串存在instr" sequence="[变量][字段][表别名]" content="if (isnull(trim([变量])) != 0)&#xD;&#xA;{&#xD;&#xA;  if (instr([变量], ',') > 0)&#xD;&#xA;  {&#xD;&#xA;    hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%s%s&quot;,    @sSql,&quot;    and instr(',' || '&quot;,[变量],&quot;' || ',', ',' ||  [表别名][字段] || ',') > 0 &quot;);&#xD;&#xA;  }&#xD;&#xA;  else&#xD;&#xA;  {  &#xD;&#xA;    hs_snprintf(@sSql,CNST_SQLSTR_LEN,&quot;%s \n %s%s%s&quot;,    @sSql,&quot;    and [表别名][字段] = '&quot;,[变量],&quot;' &quot;);&#xD;&#xA;  }&#xD;&#xA;}" type="原子"/>
  <macroItems name="通用执行SQL" content="iReturnCode = lpConn->executeUpdate([语句]);&#xD;&#xA;if (iReturnCode != 0)" type="原子"/>
  <macroItems name="标准结果集返回" type="原子"/>
  <macroItems name="PRO*C结果集为空" content="if  (SQLCODE == ERR_SELECTNODATA || SQLCODE == ERR_GETPROCOUTPUTERROR)" type="原子"/>
  <macroItems name="PRO*C结果集不为空" content="if (SQLCODE == OK_SUCCESS)" type="原子"/>
  <macroItems name="检查PRO*C结果集为空" content="if  (v_result_num == 0)" type="原子"/>
  <macroItems name="PRO*C函数报错返回" content="iReturnCode = [错误ID];&#xD;&#xA;@error_no   = [错误ID];&#xD;&#xA;hs_snprintf(@error_info,CNST_ERRORINFO_LEN, &lt;SP>[错误信息]);&#xD;&#xA;@error_id   = SQLCODE;&#xD;&#xA;hs_strncpy(@error_sysinfo,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);&#xD;&#xA;&#xD;&#xA;goto svr_end;" type="原子"/>
  <macroItems name="PRO*C函数多记录校验" content="if (SQLCODE == ERR_NO_SELECT_MUTIDATA_INTO_VAR)" type="原子"/>
  <macroItems name="PRO*C函数事务内报错返回" content="iReturnCode = [错误ID];&#xD;&#xA;@error_no   = [错误ID];&#xD;&#xA;hs_snprintf(@error_info,CNST_ERRORINFO_LEN, &lt;SP>[错误信息]);&#xD;&#xA;@error_id   = SQLCODE;&#xD;&#xA;hs_strncpy(@error_sysinfo,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);&#xD;&#xA;&#xD;&#xA;EXEC SQL rollback;&#xD;&#xA;goto svr_end;" type="原子"/>
  <macroItems name="PRO*C函数无记录事务内报错返回" content="if (sqlca.sqlerrd[2] == 0)    &#xD;&#xA;{&#xD;&#xA;  iReturnCode = [错误ID];&#xD;&#xA;  @error_no   = [错误ID];&#xD;&#xA;  hs_snprintf(@error_info,CNST_ERRORINFO_LEN, &lt;SP>[错误信息]);&#xD;&#xA;&#xD;&#xA;  EXEC SQL rollback;&#xD;&#xA;  goto svr_end;&#xD;&#xA;}" type="原子"/>
  <macroItems name="PRO*C插入事务内报错返回" content="if (SQLCODE != OK_SUCCESS)&#xD;&#xA;{&#xD;&#xA;  iReturnCode = [错误ID];&#xD;&#xA;  @error_no   = [错误ID];&#xD;&#xA;  hs_snprintf(@error_info,CNST_ERRORINFO_LEN, &lt;SP>[错误信息]);&#xD;&#xA;  @error_id   = SQLCODE;&#xD;&#xA;  hs_strncpy(@error_sysinfo,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);&#xD;&#xA;&#xD;&#xA;  EXEC SQL rollback;&#xD;&#xA;  goto svr_end;&#xD;&#xA;}" type="原子"/>
  <macroItems name="PRO*C结果集函数报错返回" content="iReturnCode = [错误ID];&#xD;&#xA;@error_no   = [错误ID];&#xD;&#xA;hs_snprintf(@error_info,CNST_ERRORINFO_LEN, &lt;SP>[错误信息]);&#xD;&#xA;GetErrorInfo(lpContext, @error_no, @error_info);&#xD;&#xA;@error_id   = SQLCODE;&#xD;&#xA;hs_strncpy(@error_sysinfo,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);&#xD;&#xA;EXEC SQL CLOSE &lt;T>[游标];&#xD;&#xA;&#xD;&#xA;goto svr_end;" type="原子"/>
  <macroItems name="PRO*C结果集函数事务内报错返回" content="iReturnCode = [错误ID];&#xD;&#xA;@error_no   = [错误ID];&#xD;&#xA;hs_snprintf(@error_info,CNST_ERRORINFO_LEN, &lt;SP>[错误信息]);&#xD;&#xA;@error_id   = SQLCODE;&#xD;&#xA;hs_strncpy(@error_sysinfo,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);&#xD;&#xA;EXEC SQL rollback;&#xD;&#xA;EXEC SQL CLOSE &lt;T>[游标];&#xD;&#xA;&#xD;&#xA;goto svr_end;" type="原子"/>
  <macroItems name="PRO*C插入游标事务内报错返回" content="if (SQLCODE != OK_SUCCESS)&#xD;&#xA;{&#xD;&#xA;  iReturnCode = [错误ID];&#xD;&#xA;  @error_no   = [错误ID];&#xD;&#xA;  hs_snprintf(@error_info,CNST_ERRORINFO_LEN, &lt;SP>[错误信息]);&#xD;&#xA;  @error_id   = SQLCODE;&#xD;&#xA;  hs_strncpy(@error_sysinfo,sqlca.sqlerrm.sqlerrmc,sqlca.sqlerrm.sqlerrml);&#xD;&#xA;  EXEC SQL rollback;&#xD;&#xA;  EXEC SQL CLOSE &lt;T>[游标];&#xD;&#xA;&#xD;&#xA;  goto svr_end;&#xD;&#xA;}" type="原子"/>
  <macroItems name="PRO*C语句块业务报错返回" content=":iReturnCode:= &lt;E>[错误ID];&#xD;&#xA;@error_no   := &lt;E>[错误ID];&#xD;&#xA;@error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;&#xD;&#xA;goto svr_end;" type="原子"/>
  <macroItems name="PRO*C语句块报错返回" content=":iReturnCode:= &lt;E>[错误ID];&#xD;&#xA;@error_no   := &lt;E>[错误ID];&#xD;&#xA;@error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;@error_id   := SQLCODE;&#xD;&#xA;@error_sysinfo := substr(SQLERRM,1,500);&#xD;&#xA;&#xD;&#xA;goto svr_end;" type="原子"/>
  <macroItems name="PRO*C语句块事务内报错返回" content=":iReturnCode:= &lt;E>[错误ID];&#xD;&#xA;@error_no   := &lt;E>[错误ID];&#xD;&#xA;@error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;@error_id   := SQLCODE;&#xD;&#xA;@error_sysinfo := substr(SQLERRM,1,500);&#xD;&#xA;rollback;&#xD;&#xA;goto svr_end;" type="原子"/>
  <macroItems name="PRO*C语句块事务内业务报错返回" content=":iReturnCode:= &lt;E>[错误ID];&#xD;&#xA;@error_no   := &lt;E>[错误ID];&#xD;&#xA;@error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;&#xD;&#xA;rollback;&#xD;&#xA;goto svr_end;" type="原子"/>
  <macroItems name="PRO*C语句块正常返回" content=":iReturnCode := 0;&#xD;&#xA;goto svr_end;" type="原子"/>
  <macroItems name="PRO*C语句块更新记录不存在" content="if SQL%NOTFOUND then&#xD;&#xA;  @error_no   := &lt;E>[错误ID];&#xD;&#xA;  @error_info := substrb(&lt;SP>[错误信息], 1, 500);&#xD;&#xA;  rollback;&#xD;&#xA;  goto svr_end;&#xD;&#xA;end if;" type="原子"/>
  <macroItems name="重置结束日期函数" sequence="[开始日期][结束日期][时间间隔]" content="if ([开始日期] > 0 &amp;&amp; [时间间隔] > 0)&#xD;&#xA;{&#xD;&#xA;  int li_date = hs_dateadd([开始日期],[时间间隔]);&#xD;&#xA;  &#xD;&#xA;  if (li_date &lt; [结束日期])&#xD;&#xA;    [结束日期] = li_date;&#xD;&#xA;}" type="原子"/>
  <macroItems name="重置结束日期过程" sequence="[开始日期][结束日期][时间间隔]" content="if ([开始日期] > 0 and [时间间隔] > 0) then&#xD;&#xA;  if (to_char(to_date([开始日期],'YYYYMMDD')+[时间间隔],'YYYYMMDD') &lt; [结束日期]) then&#xD;&#xA;    [结束日期] := to_char(to_date([开始日期],'YYYYMMDD')+[时间间隔],'YYYYMMDD');&#xD;&#xA;  end if;&#xD;&#xA;end if;" type="原子"/>
  <macroItems name="单营业部日期定位串" sequence="[定位串][初始化日期][部门编号]" content="sprintf(@position_str_start,&quot;%d%05d&quot;,[初始化日期],[部门编号]);&#xD;&#xA;if(strcmp([定位串],@position_str_start)>0)&#xD;&#xA;{&#xD;&#xA; hs_strcpy(@position_str_start,[定位串]);&#xD;&#xA;}&#xD;&#xA;sprintf(@position_str_end,&quot;%d%05d&quot;,[初始化日期],[部门编号]+1);&#xD;&#xA;hs_snprintf(@sSql, CNST_SQLSTR_LEN,&quot;%s \n %s%s%s%s%s&quot;,    @sSql,&quot;    and a.position_str > '&quot;, @position_str_start, &quot;' and  a.position_str &lt; '&quot;,@position_str_end,&quot;'&quot;);&#xD;&#xA;" type="原子"/>
  <macroItems name="公司历史查询日期定位串" sequence="[汇总标志][定位串][开始日期][结束日期]" content="sprintf(@position_str_start,&quot;%08d&quot;,[开始日期]);&#xD;&#xA;if(([汇总标志]==0) &amp;&amp; (strcmp([定位串],@position_str_start)>0))&#xD;&#xA;{&#xD;&#xA; hs_strcpy(@position_str_start,[定位串]);&#xD;&#xA;}&#xD;&#xA;sprintf(@position_str_end,&quot;%08d&quot;,[结束日期]+1);&#xD;&#xA;hs_snprintf(@sSql, CNST_SQLSTR_LEN,&quot;%s \n %s%s%s%s%s&quot;,    @sSql,&quot;    and a.position_str > '&quot;, @position_str_start, &quot;' and  a.position_str &lt; '&quot;,@position_str_end,&quot;'&quot;);&#xD;&#xA;" type="原子"/>
  <macroItems name="公司历史查询日期部门定位串" content="sprintf(@position_str_start,&quot;%08d%05d&quot;,[开始日期],[部门编号]);&#xD;&#xA;if(([汇总标志]==0) &amp;&amp; (strcmp([定位串],@position_str_start)>0))&#xD;&#xA;{&#xD;&#xA; hs_strcpy(@position_str_start,[定位串]);&#xD;&#xA;}&#xD;&#xA;sprintf(@position_str_end,&quot;%08d%05d&quot;,[结束日期],[部门编号]+1);&#xD;&#xA;hs_snprintf(@sSql, CNST_SQLSTR_LEN,&quot;%s \n %s%s%s%s%s&quot;,    @sSql,&quot;    and a.position_str > '&quot;, @position_str_start, &quot;' and  a.position_str &lt; '&quot;,@position_str_end,&quot;'&quot;);&#xD;&#xA;" type="原子"/>
  <macroItems name="信用业务函数判断" sequence="[资产属性]" content="if ([资产属性] == CNST_ASSETPROP_CREDIT)" type="原子"/>
  <macroItems name="信用业务过程判断" sequence="[变量]" content="if ([变量] == '7')" type="原子"/>
  <macroItems name="取系统节点号" content="[变量] = lpContext->GetOrgRequest()->GetItem(TAG_SYSTEM_NO)->GetInt();" type="原子"/>
  <macroItems name="UF20交易节点版本判断" content="if ( (isnull(trim(@sysnode_version)) == 0) || (hs_strcmp(trim(@sysnode_version), &quot;0&quot;) == 0) )" type="原子" description="判断sysnode_version是否未UF20，需要对sysnode_version变量赋值后判断"/>
  <macroItems name="事务处理开始" content="//事务处理开始" type="原子,过程"/>
  <macroItems name="事务处理结束" content="commit;" type="原子,过程"/>
  <macroItems name="PRO*C事务提交" content="EXEC SQL commit;" type="原子"/>
  <macroItems name="手工打包体结束" content="v_[打包器]->EndPack();" type="原子"/>
</usermacro:UserMacro>
