<?xml version="1.0" encoding="UTF-8"?>
<atom:AtomService xmlns:atom="http://www.hundsun.com/ares/studio/cres/atom/1.0.0" inputCollection="true" interfaceFlag="" name="AS_DEMOUSER_GENENAL_SELECT_USE" chineseName="AS_演示用户管理_通用SELECT使用" description="[通用SELECT语句]使用" objectId="2100004" database="USERDB" pseudoCode="&#xA;/********************************************************************&#xA;**&#xA;** [通用SELECT]&#xA;**   功能：通过动态拼接SQL语句执行返回结果集&#xA;**   范围：原子服务、原子函数，主要应用于公司级别查询统计，因为包含用户操作权限的不可确定性，所以只能进行SQL动态拼接&#xA;**   注意：动态SQL语句每次执行都会进行SQL解析，所以一般情况下尽量少用，如果这种代码在系统中很多，&#xA;**        会导致SQL在数据库不断的替换，系统解析比重很高，严重影响系统性能&#xA;**&#xA;********************************************************************/&#xA;&#xA;if (@request_num == 0)&#xA;{&#xA;@request_num = 1000;&#xA;}&#xA;&#xA;hs_snprintf(@sSql, 16000,&quot;%s&quot;,&quot;&quot;);&#xA;&#xA;if (@total_action == 0)&#xA;{&#xA;hs_snprintf(@sSql, 16000,&quot;%s \n %s&quot;,        @sSql,&quot;select  * from (&quot;);&#xA;}&#xA;else&#xA;{&#xA;hs_snprintf(@sSql, 16000,&quot;%s \n %s%s%s%s%s&quot;,@sSql,&quot;select  &quot;, @group_columns, &quot;, count(*) as rowcount &quot;, @compute_columns, &quot; from (&quot;);&#xA;}&#xA;&#xA;&#xA;hs_snprintf(@sSql, 16000,&quot;%s \n %s&quot;,        @sSql,&quot;  select a.* &quot;);&#xA;hs_snprintf(@sSql, 16000,&quot;%s \n %s&quot;,        @sSql,&quot;  from hs_user.demoinfo a &quot;);&#xA;hs_snprintf(@sSql, 16000,&quot;%s \n %s&quot;,        @sSql,&quot;  where 1 = 1 &quot;);&#xA;&#xA;[标准可选查询条件字符串instr][@en_user_status][user_status][a.]&#xA;[标准可选查询条件整数存在instr][@en_branch_no][branch_no][a.]&#xA;//20091228 caozh add&#xA;[标准可选查询条件字符][@id_kind][id_kind][=][d.]&#xA;&#xA;//普通的营业部限制&#xA;hs_snprintf(@sSql, 16000,&quot;%s \n %s&quot;,        @sSql,@op_query_limits);&#xA;//特殊账号限制，可操作客户和客户可被操作员操作限制&#xA;hs_snprintf(@sSql, 16000,&quot;%s \n %s&quot;,        @sSql,@op_acct_limits);&#xA;//专门机构限制&#xA;hs_snprintf(@sSql, 16000,&quot;%s \n %s&quot;,        @sSql,@op_special_limits);&#xA;&#xA;if (@total_action == 0)&#xA;{&#xA;//如果操作员为单营业部，需要定位串和branch_no,如果为多营业部，则只需要定位串&#xA;if (@branch_count == 1)&#xA;{&#xA;hs_snprintf(@sSql, 16000,&quot;%s \n %s%d&quot;,      @sSql,&quot; and d.branch_no =&quot;,@op_branch_no);&#xA;[标准可选查询条件字符串][@position_str_end][position_str][&lt;][d.]&#xA;[标准可选查询条件字符串][@position_str][position_str][>][d.]&#xA;}&#xA;else&#xA;{&#xA;[标准可选查询条件字符串][@position_str][position_str][>][d.]&#xA;}&#xA;&#xA;hs_snprintf(@sSql, 16000,&quot;%s \n %s&quot;,        @sSql,&quot;  order by d.position_str&quot;);&#xA;hs_snprintf(@sSql, 16000,&quot;%s \n %s%d&quot;,      @sSql,&quot;) where rownum &lt;=&quot;,@request_num);&#xA;}&#xA;else&#xA;{&#xA;if (@branch_count == 1)&#xA;{&#xA;hs_snprintf(@sSql, 16000,&quot;%s \n %s%d&quot;,      @sSql,&quot; and d.branch_no =&quot;,@op_branch_no);&#xA;sprintf(@position_str_start,&quot;%05d&quot;,@op_branch_no);&#xA;sprintf(@position_str_end,&quot;%05d&quot;,@op_branch_no+1);&#xA;&#xA;[标准可选查询条件字符串][@position_str_end][position_str][&lt;][d.]&#xA;[标准可选查询条件字符串][@position_str_start][position_str][>][d.]&#xA;}&#xA;hs_snprintf(@sSql, 16000,&quot;%s \n %s%s&quot;,      @sSql,&quot;) group by &quot;,@groupby_string);&#xA;}&#xA;&#xA;[通用SELECT][@sSql]&#xA;{&#xA;[标准结果集返回]&#xA;}&#xA;else&#xA;{&#xA;[数据库报错返回]&#xA;}&#xA;">
  <inputParameters id="op_branch_no" flags=""/>
  <inputParameters id="en_user_status" flags=""/>
  <inputParameters id="en_branch_no" flags=""/>
  <inputParameters id="position_str" flags=""/>
  <inputParameters id="position_str_end" flags=""/>
  <inputParameters id="request_num" flags=""/>
  <inputParameters id="op_acct_limits" flags=""/>
  <inputParameters id="op_special_limits" flags=""/>
  <inputParameters id="op_query_limits" flags=""/>
  <inputParameters id="total_action" flags=""/>
  <inputParameters id="group_columns" flags=""/>
  <inputParameters id="compute_columns" flags=""/>
  <inputParameters id="groupby_string" flags=""/>
  <inputParameters id="branch_count" flags=""/>
</atom:AtomService>
